version: '3'
services:

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    restart: on-failure
    networks:
      - whoisbi
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    volumes:
      - postgres:/data/postgres
    networks:
      - whoisbi
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - whoisbi

  #
  # whois.bi init schema
  #
  schema:
    build:
      context: .
      dockerfile: services/Dockerfile.dev
      args:
        service: schema
    networks:
      - whoisbi
        # depends_on:
        #   - postgres
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      - postgres

  #
  # whois.bi services
  #

  api:
    build:
      context: .
      dockerfile: services/Dockerfile.dev
      args:
        service: api
    ports:
      - 8888:${HTTP_API_PORT}
    restart: on-failure
    networks:
      - whoisbi
        # depends_on:
        #   - schema
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      HTTP_API_ADDR: ${HTTP_API_ADDR}
      HTTP_SESSION_ID: ${HTTP_SESSION_ID}
      HTTP_COOKIE_SECRET: ${HTTP_COOKIE_SECRET}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME}
      SMTP_EMAIL: ${SMTP_EMAIL}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      RABBITMQ_URI: ${RABBITMQ_URI}
      MODE: ${MODE}
    volumes:
      - ./:/build
    depends_on:
      - schema
    # DEV MODE
    volumes:
      - ./:/build

  manager:
    build:
      context: .
      dockerfile: services/Dockerfile.dev
      args:
        service: manager
    restart: on-failure
    networks:
      - whoisbi
        # depends_on:
        #   - schema
        #   - rabbitmq
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      HTTP_API_ADDR: ${HTTP_API_ADDR}
      HTTP_SESSION_ID: ${HTTP_SESSION_ID}
      HTTP_COOKIE_SECRET: ${HTTP_COOKIE_SECRET}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME}
      SMTP_EMAIL: ${SMTP_EMAIL}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      RABBITMQ_URI: ${RABBITMQ_URI}
      MODE: ${MODE}
    depends_on:
      - schema
    # DEV MODE
    volumes:
      - ./:/build

  worker:
    build:
      context: .
      dockerfile: services/Dockerfile.dev
      args:
        service: worker
    restart: on-failure
    networks:
      - whoisbi
        # depends_on:
        #   - rabbitmq
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      HTTP_API_ADDR: ${HTTP_API_ADDR}
      HTTP_SESSION_ID: ${HTTP_SESSION_ID}
      HTTP_COOKIE_SECRET: ${HTTP_COOKIE_SECRET}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME}
      SMTP_EMAIL: ${SMTP_EMAIL}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      RABBITMQ_URI: ${RABBITMQ_URI}
      MODE: ${MODE}
    depends_on:
      - schema
    # DEV MODE
    volumes:
      - ./:/build

volumes:
  postgres:
  rabbitmq:

networks:
  whoisbi:
    driver: bridge
